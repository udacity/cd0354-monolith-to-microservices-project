version: '3'
 
services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: postgres
    volumes:
    - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      interval: 10s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    ports:
      - 5432:5432
 
  frontend:
    image: iamnarutohokage1995/udagram-frontend
    container_name: udagram-frontend
    build:
      context: ./udagram-frontend
    volumes:
      - app.config.json:/usr/share/nginx/html/assets/app.config.json
    ports:
      - 8100:80
    restart: unless-stopped
 
  api:
    image: iamnarutohokage1995/udagram-api
    container_name: udagram-api
    build:
      dockerfile: Dockerfile
      context: ./udagram-api/
    volumes:
      - $HOME/.aws:/root/.aws
    ports:
      - 8888:8080
    restart: unless-stopped
    environment:
    - POSTGRES_USERNAME=$POSTGRES_USERNAME
    - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    - POSTGRES_HOST=$POSTGRES_HOST
    - POSTGRES_DB=$POSTGRES_DB
    - AWS_BUCKET=$AWS_BUCKET
    - AWS_REGION=$AWS_REGION
    - AWS_PROFILE=$AWS_PROFILE
    - JWT_SECRET=$JWT_SECRET
    - URL=$URL
  
  user-api:
    image: iamnarutohokage1995/udagram-api-user
    container_name: udagram-api-user
    build:
      context: ./udagram-api-user
    restart: unless-stopped
    environment:
    - POSTGRES_USERNAME=$POSTGRES_USERNAME
    - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    - POSTGRES_HOST=$POSTGRES_HOST
    - POSTGRES_DB=$POSTGRES_DB
    - AWS_BUCKET=$AWS_BUCKET
    - AWS_REGION=$AWS_REGION
    - AWS_PROFILE=$AWS_PROFILE
    - JWT_SECRET=$JWT_SECRET
    - URL=$URL

  feed-api:
    image: iamnarutohokage1995/udagram-api-feed
    container_name: udagram-api-feed
    build:
      context: ./udagram-api-feed
    volumes:
      - $HOME/.aws:/root/.aws
    restart: unless-stopped
    environment:
    - POSTGRES_USERNAME=$POSTGRES_USERNAME
    - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    - POSTGRES_HOST=$POSTGRES_HOST
    - POSTGRES_DB=$POSTGRES_DB
    - AWS_BUCKET=$AWS_BUCKET
    - AWS_REGION=$AWS_REGION
    - AWS_PROFILE=$AWS_PROFILE
    - JWT_SECRET=$JWT_SECRET
    - URL=$URL
       
  reverseproxy:
    image: iamnarutohokage1995/reverseproxy
    container_name: reverseproxy
    build:
      context: ./udagram-reverseproxy
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - user-api
      - feed-api
networks:
  default:
    driver: bridge
 
volumes:
  postgres-db-volume:
